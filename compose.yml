name: minecraft
services:
  minecraft:
    image: nausicaea/minecraft:latest
    build:
      context: minecraft
      args:
        MINECRAFT_VERSION: 1.20.1
    container_name: minecraft
    environment:
      MINECRAFT_SERVER_ID: nausicaea
      JAVA_INITIAL_MEM: 256M
      JAVA_MAX_MEM: 6G
    volumes:
      - ./minecraft/log4j2.xml:/var/lib/minecraft/log4j2.xml
      - ./minecraft/server.properties:/var/lib/minecraft/server.properties
      - ./minecraft/opentelemetry.properties:/var/lib/minecraft/opentelemetry.properties
      - ./minecraft/ops.json:/var/lib/minecraft/ops.json
      - ./minecraft/whitelist.json:/var/lib/minecraft/whitelist.json
      - ./minecraft/banned-ips.json:/var/lib/minecraft/banned-ips.json
      - ./minecraft/banned-players.json:/var/lib/minecraft/banned-players.json
      - audioplayer_uploads:/var/lib/minecraft/audioplayer_uploads
      - backups:/var/lib/minecraft/backups
      - cache:/var/lib/minecraft/.cache
      - mod_config:/var/lib/minecraft/config
      - logs:/var/lib/minecraft/logs
      - universe:/var/lib/minecraft/universe
    ports:
      - 25565:25565/tcp
      - 24454:24454/udp
    restart: always

  otel_collector:
    image: docker.io/otel/opentelemetry-collector:latest
    container_name: otel_collector
    command: 
      - --config=/etc/otel-collector.yaml
    volumes:
      - ./otel/otel-collector.yaml:/etc/otel-collector.yaml

  tempo_setup:
    image: &tempo docker.io/grafana/tempo:latest
    container_name: tempo_setup
    user: root
    entrypoint:
      - chown
      - "-R"
      - "10001:10001"
      - /var/tempo
    volumes:
      - tempo:/var/tempo

  tempo:
    image: *tempo
    container_name: tempo
    command: 
      - --config.file=/etc/tempo.yaml
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo:/var/tempo
    depends_on:
      - tempo_setup

  loki_setup:
    image: &loki docker.io/grafana/loki:3.1.1
    container_name: loki_setup
    user: root
    entrypoint:
      - chown
      - "-R"
      - "10001:10001"
      - /var/loki
    volumes:
      - loki:/var/loki

  loki:
    image: *loki
    container_name: loki
    command: 
      - --config.file=/etc/loki.yaml
    volumes:
      - ./loki/loki.yaml:/etc/loki.yaml
      - loki:/var/loki
    depends_on:
      - loki_setup

  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    command: 
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - 127.0.0.1:9090:9090/tcp

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    environment:
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_BASIC_ENABLED: false
      GF_FEATURE_TOGGLES_ENABLE: accessControlOnCall,traceqlEditor
      GF_INSTALL_PLUGINS: https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    volumes:
      - ./grafana:/etc/grafana/provisioning
    ports:
      - 127.0.0.1:3000:3000/tcp

volumes:
  audioplayer_uploads: {}
  backups: {}
  cache: {}
  logs: {}
  mod_config: {}
  universe: {}
  tempo: {}
  loki: {}
