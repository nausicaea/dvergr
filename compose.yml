name: minecraft
services:
  nginx:
    image: docker.io/library/nginx:1.27.1-alpine3.20-otel
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 25565:25565/tcp
      - 25565:25565/udp
      - 24454:24454/udp
    depends_on:
      - minecraft

  minecraft:
    image: registry.gitlab.com/nausicaea/minecraft:v0.8.0
    build:
      context: minecraft
      args:
        MODRINTH_PAT: ${MODRINTH_PAT}
        MINECRAFT_VERSION: 1.20.4
        FABRIC_LOADER_VERSION: 0.16.2
        FABRIC_LOADER_CHECKSUM: sha256:45bf5969b76cc046dcb042375001fd7b6934f6a05c05c20bb53ae6b895c23439
        FABRIC_INSTALLER_VERSION: 1.0.1
        YARN_MAPPINGS_VERSION: 1.20.4+build.3
        OTEL_JAVAAGENT_VERSION: 1.33.5
        OTEL_JAVAAGENT_CHECKSUM: sha256:e77f7f3e2f2601a288bd8cb9deb7e2f9578034344e761587f51f03e097ae02ce
    container_name: minecraft
    environment:
      MINECRAFT_SERVER_ID: nausicaea
      JAVA_INITIAL_MEM: 256M
      JAVA_MAX_MEM: ${JAVA_MAX_MEM}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel_collector:4317
    volumes:
      - ./minecraft/server.properties:/var/lib/minecraft/server.properties:ro
      - ./minecraft/opentelemetry.properties:/var/lib/minecraft/opentelemetry.properties:ro
      - ./minecraft/log4j2.xml:/var/lib/minecraft/log4j2.xml:ro
      - backups:/var/lib/minecraft/backups
      - cache:/var/lib/minecraft/.fabric
      - crash_reports:/var/lib/minecraft/crash-reports
      - logs:/var/lib/minecraft/logs
      - mod_config:/var/lib/minecraft/config
      - player_config:/var/lib/minecraft/player-config
      - universe:/var/lib/minecraft/universe
    expose:
      - 30000/tcp
      - 30000/udp
      - 30001/udp
    depends_on:
      - otel_collector
    mem_limit: ${MINECRAFT_MEM_LIMIT}

  otel_collector:
    image: docker.io/otel/opentelemetry-collector:0.109.0
    container_name: otel_collector
    command:
      - --config=/etc/otel-collector.yaml
    volumes:
      - ./otel/otel-collector.yaml:/etc/otel-collector.yaml:ro
    expose:
      - 4317/tcp
      - 8888/tcp
    depends_on:
      - tempo
      - loki
      - prometheus

  tempo_setup:
    image: &tempo docker.io/grafana/tempo:2.6.0
    container_name: tempo_setup
    user: root
    entrypoint:
      - chown
      - "-R"
      - "10001:10001"
      - /var/tempo
    volumes:
      - tempo:/var/tempo

  tempo:
    image: *tempo
    container_name: tempo
    command:
      - --config.file=/etc/tempo.yaml
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
      - tempo:/var/tempo
    expose:
      - 4317/tcp
    depends_on:
      - tempo_setup

  loki_setup:
    image: &loki docker.io/grafana/loki:3.1.1
    container_name: loki_setup
    user: root
    entrypoint:
      - chown
      - "-R"
      - "10001:10001"
      - /var/loki
    volumes:
      - loki:/var/loki

  loki:
    image: *loki
    container_name: loki
    command:
      - --config.file=/etc/loki.yaml
    volumes:
      - ./loki/loki.yaml:/etc/loki.yaml:ro
      - loki:/var/loki
    expose:
      - 3100/tcp
    depends_on:
      - loki_setup

  prometheus:
    image: docker.io/prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus.yaml:ro
      - prometheus:/prometheus
    expose:
      - 9090/tcp
    ports:
      - 9090:9090/tcp
    extra_hosts:
      - "host.docker.internal=host-gateway"

  grafana:
    image: docker.io/grafana/grafana:11.2.0
    container_name: grafana
    environment:
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_BASIC_ENABLED: false
      GF_FEATURE_TOGGLES_ENABLE: accessControlOnCall,traceqlEditor
      GF_INSTALL_PLUGINS: https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana:/var/lib/grafana
    ports:
      - 3000:3000/tcp
    depends_on:
      - loki
      - tempo
      - prometheus

volumes:
  backups: {}
  cache: {}
  crash_reports: {}
  logs: {}
  mod_config: {}
  player_config: {}
  universe: {}
  tempo: {}
  loki: {}
  prometheus: {}
  grafana: {}
