plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"otel" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	implementation 'io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17:2.6.0-alpha'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:2.7.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-incubator:2.7.0-alpha'
    implementation 'io.opentelemetry:opentelemetry-api:1.41.0'
    implementation 'io.opentelemetry:opentelemetry-api-incubator:1.41.0-alpha'
    implementation 'io.opentelemetry:opentelemetry-context:1.41.0'
	implementation 'io.opentelemetry.semconv:opentelemetry-semconv:1.25.0-alpha'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.41.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.41.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-common:1.41.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-sender-okhttp:1.41.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okio:okio:3.6.0'
    implementation 'com.squareup.okio:okio-jvm:3.6.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-common:1.9.10'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.21'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.21'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.21'
    implementation 'org.jetbrains:annotations:13.0'

	include 'io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17:2.6.0-alpha'
    include 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:2.7.0'
    include 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-incubator:2.7.0-alpha'
    include 'io.opentelemetry:opentelemetry-api:1.41.0'
    include 'io.opentelemetry:opentelemetry-api-incubator:1.41.0-alpha'
    include 'io.opentelemetry:opentelemetry-context:1.41.0'
	include 'io.opentelemetry.semconv:opentelemetry-semconv:1.25.0-alpha'
    include 'io.opentelemetry:opentelemetry-exporter-otlp:1.41.0'
    include 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.41.0'
    include 'io.opentelemetry:opentelemetry-exporter-common:1.41.0'
    include 'io.opentelemetry:opentelemetry-exporter-sender-okhttp:1.41.0'
    include 'com.squareup.okhttp3:okhttp:4.12.0'
    include 'com.squareup.okio:okio:3.6.0'
    include 'com.squareup.okio:okio-jvm:3.6.0'
    include 'org.jetbrains.kotlin:kotlin-stdlib-common:1.9.10'
    include 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.21'
    include 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.21'
    include 'org.jetbrains.kotlin:kotlin-stdlib:1.8.21'
    include 'org.jetbrains:annotations:13.0'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
